name: 'Redeploy Services'

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'postgres/**'
      - 'lightdash/**'

jobs:
  checkout:
    runs-on: [actuary]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'AlexanderTroyScott/hackathon-predictive-analytics'
          ref: 'main'
  postgres:
    if: "github.event_name == 'workflow_dispatch' || (contains(github.event.push.commits[*].added, 'postgres/**') || contains(github.event.push.commits[*].modified, 'postgres/**'))"
    runs-on: [actuary]
    env:
      PGHOST: ${{ vars.POSTGRES_HOST }}
      PGUSER: ${{ vars.POSTGRES_USER }}
      PGPORT: ${{ vars.POSTGRES_PORT }}
      PGDATABASE: ${{ vars.POSTGRES_DATABASE }}
      PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
    steps:
      - name: Remove postgres service
        run: |
          SERVICES=("analytics_db") 
          for SERVICE_NAME in "${SERVICES[@]}"; do
            if docker service ls | grep -q $SERVICE_NAME; then
              docker service rm $SERVICE_NAME;
              echo "Service $SERVICE_NAME removed."
            else echo "Service $SERVICE_NAME is not running."
            fi
          done
      - name: debug
        run: |
          ls -la
          pwd
      - name: Deploy postgres
        run: |
          chmod -R 777 postgres/docker-entrypoints-initdb.d 
          docker stack deploy -c postgres/postgres.yaml analytics
  lightdash:
    if: "github.event_name == 'workflow_dispatch' || (contains(github.event.push.commits[*].added, 'lightdash/**') || contains(github.event.push.commits[*].modified, 'lightdash/**'))"
    runs-on: [actuary]
    env:
      LIGHTDASH_PROJECT_0_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PAT_READ_REPOS }}
      LIGHTDASH_SECRET: ${{ secrets.LIGHTDASH_SECRET }}
      PGHOST: ${{ vars.POSTGRES_HOST }}
      PGUSER: ${{ vars.POSTGRES_USER }}
      PGPORT: ${{ vars.POSTGRES_PORT }}
      PGDATABASE: ${{ vars.POSTGRES_DATABASE }}
      PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      GOOGLE_OAUTH_ID: ${{ vars.GOOGLE_OAUTH_ID }}
      AUTH_GOOGLE_OAUTH2_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH_SECRET }}
    steps:
      - name: Remove lightdash service
        run: |
          SERVICES=("analytics_lightdash") 
          for SERVICE_NAME in "${SERVICES[@]}"; do
            if docker service ls | grep -q $SERVICE_NAME; then
              docker service rm $SERVICE_NAME;
              echo "Service $SERVICE_NAME removed."
            else echo "Service $SERVICE_NAME is not running."
            fi
          done
      - name: Deploy lightdash
        run: docker stack deploy -c lightdash/lightdash.yaml analytics
